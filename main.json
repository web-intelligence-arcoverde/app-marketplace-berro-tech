{
  "variables": {
    "system.debug": {"value": "false", "allowOverride": true},
    "lastCommitMessage": {"value": "fix: bug", "allowOverride": true},
    "pr.check.id": {"value": "", "allowOverride": true},
    "pr.status.id": {"value": "", "allowOverride": true},
    "MOBILECENTER_OUTPUT_DIRECTORY": {
      "value": "$(Build.ArtifactStagingDirectory)/build"
    },
    "MOBILECENTER_BRANCH": {"value": "main"},
    "MOBILECENTER_BUILD_ID": {"value": "$(Build.BuildNumber)"},
    "MOBILECENTER_SOURCE_DIRECTORY": {"value": "$(Build.Repository.LocalPath)"},
    "MOBILECENTER_TRIGGER": {"value": "continuous"},
    "APPCENTER_OUTPUT_DIRECTORY": {
      "value": "$(Build.ArtifactStagingDirectory)/build"
    },
    "APPCENTER_BRANCH": {"value": "main"},
    "APPCENTER_BUILD_ID": {"value": "$(Build.BuildNumber)"},
    "APPCENTER_SOURCE_DIRECTORY": {"value": "$(Build.Repository.LocalPath)"},
    "APPCENTER_TRIGGER": {"value": "continuous"},
    "artifactVersioning.build.format": {
      "value": "buildId",
      "allowOverride": true
    },
    "buildScripts.toolset": {"value": "{}"},
    "javaScriptRunTests": {"value": "false"},
    "MOBILECENTER_REACTNATIVE_PACKAGE": {"value": "package.json"},
    "APPCENTER_REACTNATIVE_PACKAGE": {"value": "package.json"},
    "SDK": {"value": ""},
    "TestSDK": {"value": "iphonesimulator"},
    "MOBILECENTER_XCODE_PROJECT": {"value": "ios/BerroTech.xcworkspace"},
    "MOBILECENTER_XCODE_SCHEME": {"value": "BerroTech"},
    "APPCENTER_XCODE_PROJECT": {
      "value": "ios/BerroTech.xcworkspace",
      "allowOverride": true
    },
    "APPCENTER_XCODE_WORKSPACE": {
      "value": "ios/BerroTech.xcworkspace",
      "allowOverride": true
    },
    "APPCENTER_XCODE_SCHEME": {"value": "BerroTech"},
    "sonoma.tags": {
      "value": "continuous,javascript,xcode",
      "allowOverride": true
    }
  },
  "buildNumberFormat": "$(Build.BuildId)",
  "process": {
    "phases": [
      {
        "steps": [
          {
            "environment": {},
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Install build scripts",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "e213ff0f-5d5c-4791-802d-52ea3e7be1f1",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "targetType": "inline",
              "scriptName": "",
              "arguments": "",
              "workingDirectory": "",
              "script": "Set-Location -Path '$(Agent.HomeDirectory)'\nInvoke-WebRequest -Uri 'https://appcenterbuildassets.azureedge.net/buildscripts/appcenter-build-assets-latest.zip' -OutFile 'appcenter-build-assets-latest.zip'\nif (Test-Path ./scripts) { Remove-Item -Path ./scripts -Force -Recurse }\nNew-Item -ItemType directory -Path 'scripts' | Out-Null\nunzip -q -d 'scripts' 'appcenter-build-assets-latest.zip'\nInvoke-Expression 'bash ./scripts/init.sh'",
              "failOnStderr": "true"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Select Node.js Version v2",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
              "versionSpec": "3.*",
              "definitionType": "task"
            },
            "inputs": {
              "targetType": "filePath",
              "filePath": "$(Agent.HomeDirectory)/scripts/select-node-version.sh",
              "arguments": "node16",
              "workingDirectory": "",
              "failOnStderr": "true"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "yarn/npm install",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "filename": "sh",
              "arguments": "-c \"if [ -f yarn.lock ]; then { yarn install --network-timeout=600000 && yarn list --depth=0; } else npm install; fi\"",
              "workingFolder": "",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Generate source map",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "script": "#!/bin/sh\nINDEX_FILE=\"index.ios.js\"\nif [ -f \"index.js\" ]; then\n  INDEX_FILE=\"index.js\"\nfi\n\necho \"Found $INDEX_FILE for ReactNative index.\"\n\nnode --max_old_space_size=8192 node_modules/react-native/local-cli/cli.js bundle --entry-file $INDEX_FILE --platform ios --dev false --reset-cache --bundle-output dummy-sourcemap-main.jsbundle --sourcemap-output index.ios.map",
              "workingDirectory": "",
              "failOnStderr": "false",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Copy source map file to staging",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "filename": "sh",
              "arguments": "-c \"mkdir -p $(build.artifactstagingdirectory)/symbols && cp index.ios.map $(build.artifactstagingdirectory)/symbols/\"",
              "workingFolder": "",
              "failOnStandardError": "true"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Tag build",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "scriptPath": "$(Agent.HomeDirectory)/scripts/emit-tags.sh",
              "args": "$(sonoma.tags)",
              "disableAutoCwd": "false",
              "cwd": "",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Set Xcode path",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "filename": "/bin/bash",
              "arguments": "-c \"sudo xcode-select --switch /Applications/Xcode_14.2.app/Contents/Developer\"",
              "workingFolder": "",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Pod install",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "bfc05e0d-839c-42cd-89c7-0f9fbfcab965",
              "versionSpec": "0.*",
              "definitionType": "task"
            },
            "inputs": {"cwd": "ios", "forceRepoUpdate": "true"}
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Determine project file path",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
              "versionSpec": "3.*",
              "definitionType": "task"
            },
            "inputs": {
              "targetType": "filePath",
              "filePath": "$(Agent.HomeDirectory)/scripts/detect-autogenerated-workspace.sh",
              "arguments": "ios BerroTech",
              "workingDirectory": "$(Build.SourcesDirectory)"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Set Bundle version",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "filename": "/usr/bin/find",
              "arguments": ". -name \"*Info.plist\" -exec /usr/libexec/PlistBuddy -c \"Set :CFBundleVersion $(Build.BuildNumber)\" {} ;",
              "workingFolder": "",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Update Xcode build settings",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "d9bafed4-0b18-4f58-968d-86655b4d2ce9",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "filename": "node",
              "arguments": "$(Agent.HomeDirectory)/scripts/build-xcproject-analyzer/node_modules/@build/xcproject-analyzer-script/script/bin.js --app-id=\"c1625057-0217-47a3-9ee2-7a65dd3940c3\" --app-insights-key=\"$(AppInsightsKey)\" --xc-workspace-path=\"$(APPCENTER_XCODE_WORKSPACE)\" --scheme=\"BerroTech\"",
              "workingFolder": "$(Build.SourcesDirectory)",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Xcode build (not signed)",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "1e78dc1b-9132-4b18-9c75-0e7ecc634b74",
              "versionSpec": "4.*",
              "definitionType": "task"
            },
            "inputs": {
              "actions": "clean archive",
              "configuration": "",
              "sdk": "$(SDK)",
              "xcWorkspacePath": "$(APPCENTER_XCODE_PROJECT)",
              "scheme": "BerroTech",
              "xcodeVersion": "default",
              "xcodeDeveloperDir": "/Applications/Xcode_14.2.app/Contents/Developer",
              "packageApp": "False",
              "archivePath": "$(agent.builddirectory)/output/build/archive",
              "exportPath": "$(agent.builddirectory)/output/build/export",
              "exportOptions": "auto",
              "exportTeamId": "",
              "exportOptionsPlist": "",
              "exportArgs": "",
              "signingOption": "nosign",
              "destinationPlatformOption": "default",
              "args": "-archivePath \"$(agent.builddirectory)/output/build/archive/BerroTech.xcarchive\"",
              "cwd": "",
              "outputPattern": "$(agent.builddirectory)/output/build",
              "useXcpretty": "false",
              "publishJUnitResults": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Copy build files to staging",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "SourceFolder": "$(agent.builddirectory)/output/build/archive",
              "Contents": "**",
              "TargetFolder": "$(build.artifactstagingdirectory)/build",
              "CleanTargetFolder": "false",
              "OverWrite": "true",
              "flattenFolders": "False"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Copy symbol files to staging",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "SourceFolder": "$(agent.builddirectory)/output/build/archive/BerroTech.xcarchive/dSYMs",
              "Contents": "**/*.dSYM/**",
              "TargetFolder": "$(build.artifactstagingdirectory)/symbols",
              "CleanTargetFolder": "false",
              "OverWrite": "true",
              "flattenFolders": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Publish build",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "PathtoPublish": "$(build.artifactstagingdirectory)/build",
              "ArtifactName": "build",
              "ArtifactType": "Container",
              "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Publish symbols",
            "timeoutInMinutes": 0,
            "retryCountOnTaskFailure": 0,
            "task": {
              "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "PathtoPublish": "$(build.artifactstagingdirectory)/symbols",
              "ArtifactName": "symbols",
              "ArtifactType": "Container",
              "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)"
            }
          }
        ],
        "name": null,
        "refName": "Phase_1",
        "condition": "succeeded()",
        "target": {
          "executionOptions": null,
          "allowScriptsAuthAccessOption": false,
          "type": 1
        },
        "jobAuthorizationScope": 0
      }
    ],
    "type": 1
  },
  "repository": {
    "properties": {
      "connectedServiceId": "4017dcb4-5b1a-4bb6-b932-db2d88958741",
      "gitLfsSupport": "true",
      "skipSyncSource": "false",
      "checkoutNestedSubmodules": "true",
      "fetchDepth": "0",
      "cleanOptions": "3"
    },
    "id": "https://github.com/web-intelligence-arcoverde/app-marketplace-berro-tech.git",
    "type": "Git",
    "name": "git-b601619d-37dd-441b-bfd5-d79709e0dbc1",
    "url": "https://github.com/web-intelligence-arcoverde/app-marketplace-berro-tech.git",
    "defaultBranch": "main",
    "clean": "true",
    "checkoutSubmodules": true
  },
  "project": {"id": "<Please replace with your Azure DevOps ProjectID>"}
}
